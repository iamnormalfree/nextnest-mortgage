
> modernmortgage-simple@0.1.0 test
> jest --runInBand

FAIL tests/calculations/instant-profile.test.ts
  ● Instant Profile Calculator - Dr Elena v2 Alignment › Negative Scenarios - Using Persona Fixtures › should handle TDSR breach scenario correctly

    expect(received).toBe(expected) // Object.is equality

    Expected: "TDSR"
    Received: "LTV"

    [0m [90m 366 |[39m       expect(result[33m.[39mtdsrAvailable)[33m.[39mtoBe([35m0[39m)[33m;[39m [90m// Clamped negative to 0[39m
     [90m 367 |[39m       expect(result[33m.[39mmaxLoan)[33m.[39mtoBeGreaterThanOrEqual([35m0[39m)[33m;[39m [90m// Implementation uses LTV limit[39m
    [31m[1m>[22m[39m[90m 368 |[39m       expect(result[33m.[39mlimitingFactor)[33m.[39mtoBe([32m'TDSR'[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 369 |[39m       [90m// Note: Reason codes for breaches not yet implemented in calculateInstantProfile[39m
     [90m 370 |[39m       expect(result[33m.[39mreasonCodes)[33m.[39mtoBeDefined()[33m;[39m
     [90m 371 |[39m       expect(result[33m.[39mpolicyRefs)[33m.[39mtoContain([32m'MAS Notice 645'[39m)[33m;[39m[0m

      at Object.toBe (tests/calculations/instant-profile.test.ts:368:37)

PASS components/forms/__tests__/ProgressiveFormAnalytics.test.tsx (18.119 s)
PASS components/forms/__tests__/ProgressiveFormWithController.test.tsx (8.844 s)
  ● Console

    console.log
      🎯 LeadForm.progressToStep called! {
        targetStep: 1,
        currentStep: 0,
        formDataSize: 1,
        formDataEntries: { loanType: 'new_purchase' },
        loanType: 'new_purchase'
      }

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:103:13)

    console.log
      🔎 About to validate step requirements...

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:121:13)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔍 LeadForm validation debug: {
        step: 0,
        requirements: {
          requiredFields: [ 'loanType' ],
          requiresEmail: false,
          requiresPhone: false
        },
        formData: { loanType: 'new_purchase' },
        formDataSize: 1,
        hasRequiredFields: [
          {
            field: 'loanType',
            hasField: true,
            value: 'new_purchase',
            valueType: 'string'
          }
        ]
      }

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:162:13)

    console.log
      ✅ LeadForm validation passed!

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:211:13)

    console.log
      📊 Validation result: true

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:125:13)

    console.log
      🎯 LeadForm.progressToStep called! {
        targetStep: 1,
        currentStep: 0,
        formDataSize: 1,
        formDataEntries: { loanType: 'refinance' },
        loanType: 'refinance'
      }

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:103:13)

    console.log
      🔎 About to validate step requirements...

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:121:13)

    console.log
      🔍 LeadForm validation debug: {
        step: 0,
        requirements: {
          requiredFields: [ 'loanType' ],
          requiresEmail: false,
          requiresPhone: false
        },
        formData: { loanType: 'refinance' },
        formDataSize: 1,
        hasRequiredFields: [
          {
            field: 'loanType',
            hasField: true,
            value: 'refinance',
            valueType: 'string'
          }
        ]
      }

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:162:13)

    console.log
      ✅ LeadForm validation passed!

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:211:13)

    console.log
      📊 Validation result: true

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:125:13)

    console.log
      🎯 LeadForm.progressToStep called! {
        targetStep: 1,
        currentStep: 0,
        formDataSize: 1,
        formDataEntries: { loanType: 'new_purchase' },
        loanType: 'new_purchase'
      }

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:103:13)

    console.log
      🔎 About to validate step requirements...

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:121:13)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔍 LeadForm validation debug: {
        step: 0,
        requirements: {
          requiredFields: [ 'loanType' ],
          requiresEmail: false,
          requiresPhone: false
        },
        formData: { loanType: 'new_purchase' },
        formDataSize: 1,
        hasRequiredFields: [
          {
            field: 'loanType',
            hasField: true,
            value: 'new_purchase',
            valueType: 'string'
          }
        ]
      }

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:162:13)

    console.log
      ✅ LeadForm validation passed!

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:211:13)

    console.log
      📊 Validation result: true

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:125:13)

    console.log
      🎯 LeadForm.progressToStep called! {
        targetStep: 1,
        currentStep: 0,
        formDataSize: 1,
        formDataEntries: { loanType: 'new_purchase' },
        loanType: 'new_purchase'
      }

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:103:13)

    console.log
      🔎 About to validate step requirements...

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:121:13)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔍 LeadForm validation debug: {
        step: 0,
        requirements: {
          requiredFields: [ 'loanType' ],
          requiresEmail: false,
          requiresPhone: false
        },
        formData: { loanType: 'new_purchase' },
        formDataSize: 1,
        hasRequiredFields: [
          {
            field: 'loanType',
            hasField: true,
            value: 'new_purchase',
            valueType: 'string'
          }
        ]
      }

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:162:13)

    console.log
      ✅ LeadForm validation passed!

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:211:13)

    console.log
      📊 Validation result: true

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:125:13)

    console.log
      🎯 LeadForm.progressToStep called! {
        targetStep: 1,
        currentStep: 0,
        formDataSize: 1,
        formDataEntries: { loanType: 'new_purchase' },
        loanType: 'new_purchase'
      }

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:103:13)

    console.log
      🔎 About to validate step requirements...

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:121:13)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔍 LeadForm validation debug: {
        step: 0,
        requirements: {
          requiredFields: [ 'loanType' ],
          requiresEmail: false,
          requiresPhone: false
        },
        formData: { loanType: 'new_purchase' },
        formDataSize: 1,
        hasRequiredFields: [
          {
            field: 'loanType',
            hasField: true,
            value: 'new_purchase',
            valueType: 'string'
          }
        ]
      }

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:162:13)

    console.log
      ✅ LeadForm validation passed!

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:211:13)

    console.log
      📊 Validation result: true

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:125:13)

    console.log
      🎯 LeadForm.progressToStep called! {
        targetStep: 1,
        currentStep: 0,
        formDataSize: 1,
        formDataEntries: { loanType: 'new_purchase' },
        loanType: 'new_purchase'
      }

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:103:13)

    console.log
      🔎 About to validate step requirements...

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:121:13)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔍 LeadForm validation debug: {
        step: 0,
        requirements: {
          requiredFields: [ 'loanType' ],
          requiresEmail: false,
          requiresPhone: false
        },
        formData: { loanType: 'new_purchase' },
        formDataSize: 1,
        hasRequiredFields: [
          {
            field: 'loanType',
            hasField: true,
            value: 'new_purchase',
            valueType: 'string'
          }
        ]
      }

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:162:13)

    console.log
      ✅ LeadForm validation passed!

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:211:13)

    console.log
      📊 Validation result: true

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:125:13)

    console.log
      🎯 LeadForm.progressToStep called! {
        targetStep: 1,
        currentStep: 0,
        formDataSize: 1,
        formDataEntries: { loanType: 'refinance' },
        loanType: 'refinance'
      }

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:103:13)

    console.log
      🔎 About to validate step requirements...

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:121:13)

    console.log
      🔍 LeadForm validation debug: {
        step: 0,
        requirements: {
          requiredFields: [ 'loanType' ],
          requiresEmail: false,
          requiresPhone: false
        },
        formData: { loanType: 'refinance' },
        formDataSize: 1,
        hasRequiredFields: [
          {
            field: 'loanType',
            hasField: true,
            value: 'refinance',
            valueType: 'string'
          }
        ]
      }

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:162:13)

    console.log
      ✅ LeadForm validation passed!

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:211:13)

    console.log
      📊 Validation result: true

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:125:13)

    console.log
      🎯 LeadForm.progressToStep called! {
        targetStep: 1,
        currentStep: 0,
        formDataSize: 1,
        formDataEntries: { loanType: 'new_purchase' },
        loanType: 'new_purchase'
      }

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:103:13)

    console.log
      🔎 About to validate step requirements...

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:121:13)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔍 LeadForm validation debug: {
        step: 0,
        requirements: {
          requiredFields: [ 'loanType' ],
          requiresEmail: false,
          requiresPhone: false
        },
        formData: { loanType: 'new_purchase' },
        formDataSize: 1,
        hasRequiredFields: [
          {
            field: 'loanType',
            hasField: true,
            value: 'new_purchase',
            valueType: 'string'
          }
        ]
      }

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:162:13)

    console.log
      ✅ LeadForm validation passed!

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:211:13)

    console.log
      📊 Validation result: true

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:125:13)

    console.log
      🎯 LeadForm.progressToStep called! {
        targetStep: 1,
        currentStep: 0,
        formDataSize: 1,
        formDataEntries: { loanType: 'new_purchase' },
        loanType: 'new_purchase'
      }

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:103:13)

    console.log
      🔎 About to validate step requirements...

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:121:13)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔍 LeadForm validation debug: {
        step: 0,
        requirements: {
          requiredFields: [ 'loanType' ],
          requiresEmail: false,
          requiresPhone: false
        },
        formData: { loanType: 'new_purchase' },
        formDataSize: 1,
        hasRequiredFields: [
          {
            field: 'loanType',
            hasField: true,
            value: 'new_purchase',
            valueType: 'string'
          }
        ]
      }

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:162:13)

    console.log
      ✅ LeadForm validation passed!

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:211:13)

    console.log
      📊 Validation result: true

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:125:13)

    console.log
      🎯 LeadForm.progressToStep called! {
        targetStep: 1,
        currentStep: 0,
        formDataSize: 1,
        formDataEntries: { loanType: 'new_purchase' },
        loanType: 'new_purchase'
      }

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:103:13)

    console.log
      🔎 About to validate step requirements...

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:121:13)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔍 LeadForm validation debug: {
        step: 0,
        requirements: {
          requiredFields: [ 'loanType' ],
          requiresEmail: false,
          requiresPhone: false
        },
        formData: { loanType: 'new_purchase' },
        formDataSize: 1,
        hasRequiredFields: [
          {
            field: 'loanType',
            hasField: true,
            value: 'new_purchase',
            valueType: 'string'
          }
        ]
      }

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:162:13)

    console.log
      ✅ LeadForm validation passed!

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:211:13)

    console.log
      📊 Validation result: true

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:125:13)

    console.log
      🎯 LeadForm.progressToStep called! {
        targetStep: 1,
        currentStep: 0,
        formDataSize: 1,
        formDataEntries: { loanType: 'new_purchase' },
        loanType: 'new_purchase'
      }

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:103:13)

    console.log
      🔎 About to validate step requirements...

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:121:13)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔍 LeadForm validation debug: {
        step: 0,
        requirements: {
          requiredFields: [ 'loanType' ],
          requiresEmail: false,
          requiresPhone: false
        },
        formData: { loanType: 'new_purchase' },
        formDataSize: 1,
        hasRequiredFields: [
          {
            field: 'loanType',
            hasField: true,
            value: 'new_purchase',
            valueType: 'string'
          }
        ]
      }

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:162:13)

    console.log
      ✅ LeadForm validation passed!

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:211:13)

    console.log
      📊 Validation result: true

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:125:13)

    console.log
      🎯 LeadForm.progressToStep called! {
        targetStep: 1,
        currentStep: 0,
        formDataSize: 1,
        formDataEntries: { loanType: 'new_purchase' },
        loanType: 'new_purchase'
      }

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:103:13)

    console.log
      🔎 About to validate step requirements...

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:121:13)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔍 LeadForm validation debug: {
        step: 0,
        requirements: {
          requiredFields: [ 'loanType' ],
          requiresEmail: false,
          requiresPhone: false
        },
        formData: { loanType: 'new_purchase' },
        formDataSize: 1,
        hasRequiredFields: [
          {
            field: 'loanType',
            hasField: true,
            value: 'new_purchase',
            valueType: 'string'
          }
        ]
      }

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:162:13)

    console.log
      ✅ LeadForm validation passed!

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:211:13)

    console.log
      📊 Validation result: true

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:125:13)

    console.log
      🎯 LeadForm.progressToStep called! {
        targetStep: 2,
        currentStep: 1,
        formDataSize: 4,
        formDataEntries: {
          loanType: 'new_purchase',
          name: 'Test Borrower',
          email: 'test@example.com',
          phone: '91234567'
        },
        loanType: 'new_purchase'
      }

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:103:13)

    console.log
      🔎 About to validate step requirements...

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:121:13)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: {
        loanType: 'new_purchase',
        name: 'Test Borrower',
        email: 'test@example.com',
        phone: '91234567'
      }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: {
        loanType: 'new_purchase',
        name: 'Test Borrower',
        email: 'test@example.com',
        phone: '91234567'
      }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔍 LeadForm validation debug: {
        step: 1,
        requirements: {
          requiredFields: [ 'name', 'email', 'phone' ],
          requiresEmail: true,
          requiresPhone: false
        },
        formData: {
          loanType: 'new_purchase',
          name: 'Test Borrower',
          email: 'test@example.com',
          phone: '91234567'
        },
        formDataSize: 4,
        hasRequiredFields: [
          {
            field: 'name',
            hasField: true,
            value: 'Test Borrower',
            valueType: 'string'
          },
          {
            field: 'email',
            hasField: true,
            value: 'test@example.com',
            valueType: 'string'
          },
          {
            field: 'phone',
            hasField: true,
            value: '91234567',
            valueType: 'string'
          }
        ]
      }

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:162:13)

    console.log
      ✅ LeadForm validation passed!

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:211:13)

    console.log
      📊 Validation result: true

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:125:13)

    console.log
      🎯 LeadForm.progressToStep called! {
        targetStep: 1,
        currentStep: 0,
        formDataSize: 1,
        formDataEntries: { loanType: 'new_purchase' },
        loanType: 'new_purchase'
      }

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:103:13)

    console.log
      🔎 About to validate step requirements...

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:121:13)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔍 LeadForm validation debug: {
        step: 0,
        requirements: {
          requiredFields: [ 'loanType' ],
          requiresEmail: false,
          requiresPhone: false
        },
        formData: { loanType: 'new_purchase' },
        formDataSize: 1,
        hasRequiredFields: [
          {
            field: 'loanType',
            hasField: true,
            value: 'new_purchase',
            valueType: 'string'
          }
        ]
      }

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:162:13)

    console.log
      ✅ LeadForm validation passed!

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:211:13)

    console.log
      📊 Validation result: true

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:125:13)

    console.log
      🎯 LeadForm.progressToStep called! {
        targetStep: 2,
        currentStep: 1,
        formDataSize: 4,
        formDataEntries: {
          loanType: 'new_purchase',
          name: 'Test Borrower',
          email: 'test@example.com',
          phone: '91234567'
        },
        loanType: 'new_purchase'
      }

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:103:13)

    console.log
      🔎 About to validate step requirements...

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:121:13)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: {
        loanType: 'new_purchase',
        name: 'Test Borrower',
        email: 'test@example.com',
        phone: '91234567'
      }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: {
        loanType: 'new_purchase',
        name: 'Test Borrower',
        email: 'test@example.com',
        phone: '91234567'
      }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔍 LeadForm validation debug: {
        step: 1,
        requirements: {
          requiredFields: [ 'name', 'email', 'phone' ],
          requiresEmail: true,
          requiresPhone: false
        },
        formData: {
          loanType: 'new_purchase',
          name: 'Test Borrower',
          email: 'test@example.com',
          phone: '91234567'
        },
        formDataSize: 4,
        hasRequiredFields: [
          {
            field: 'name',
            hasField: true,
            value: 'Test Borrower',
            valueType: 'string'
          },
          {
            field: 'email',
            hasField: true,
            value: 'test@example.com',
            valueType: 'string'
          },
          {
            field: 'phone',
            hasField: true,
            value: '91234567',
            valueType: 'string'
          }
        ]
      }

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:162:13)

    console.log
      ✅ LeadForm validation passed!

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:211:13)

    console.log
      📊 Validation result: true

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:125:13)

    console.log
      🎯 LeadForm.progressToStep called! {
        targetStep: 1,
        currentStep: 0,
        formDataSize: 1,
        formDataEntries: { loanType: 'new_purchase' },
        loanType: 'new_purchase'
      }

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:103:13)

    console.log
      🔎 About to validate step requirements...

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:121:13)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔍 LeadForm validation debug: {
        step: 0,
        requirements: {
          requiredFields: [ 'loanType' ],
          requiresEmail: false,
          requiresPhone: false
        },
        formData: { loanType: 'new_purchase' },
        formDataSize: 1,
        hasRequiredFields: [
          {
            field: 'loanType',
            hasField: true,
            value: 'new_purchase',
            valueType: 'string'
          }
        ]
      }

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:162:13)

    console.log
      ✅ LeadForm validation passed!

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:211:13)

    console.log
      📊 Validation result: true

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:125:13)

    console.log
      🎯 LeadForm.progressToStep called! {
        targetStep: 2,
        currentStep: 1,
        formDataSize: 4,
        formDataEntries: {
          loanType: 'new_purchase',
          name: 'Test Borrower',
          email: 'test@example.com',
          phone: '91234567'
        },
        loanType: 'new_purchase'
      }

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:103:13)

    console.log
      🔎 About to validate step requirements...

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:121:13)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: {
        loanType: 'new_purchase',
        name: 'Test Borrower',
        email: 'test@example.com',
        phone: '91234567'
      }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: {
        loanType: 'new_purchase',
        name: 'Test Borrower',
        email: 'test@example.com',
        phone: '91234567'
      }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔍 LeadForm validation debug: {
        step: 1,
        requirements: {
          requiredFields: [ 'name', 'email', 'phone' ],
          requiresEmail: true,
          requiresPhone: false
        },
        formData: {
          loanType: 'new_purchase',
          name: 'Test Borrower',
          email: 'test@example.com',
          phone: '91234567'
        },
        formDataSize: 4,
        hasRequiredFields: [
          {
            field: 'name',
            hasField: true,
            value: 'Test Borrower',
            valueType: 'string'
          },
          {
            field: 'email',
            hasField: true,
            value: 'test@example.com',
            valueType: 'string'
          },
          {
            field: 'phone',
            hasField: true,
            value: '91234567',
            valueType: 'string'
          }
        ]
      }

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:162:13)

    console.log
      ✅ LeadForm validation passed!

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:211:13)

    console.log
      📊 Validation result: true

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:125:13)

    console.log
      🎯 LeadForm.progressToStep called! {
        targetStep: 1,
        currentStep: 0,
        formDataSize: 1,
        formDataEntries: { loanType: 'new_purchase' },
        loanType: 'new_purchase'
      }

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:103:13)

    console.log
      🔎 About to validate step requirements...

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:121:13)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔍 LeadForm validation debug: {
        step: 0,
        requirements: {
          requiredFields: [ 'loanType' ],
          requiresEmail: false,
          requiresPhone: false
        },
        formData: { loanType: 'new_purchase' },
        formDataSize: 1,
        hasRequiredFields: [
          {
            field: 'loanType',
            hasField: true,
            value: 'new_purchase',
            valueType: 'string'
          }
        ]
      }

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:162:13)

    console.log
      ✅ LeadForm validation passed!

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:211:13)

    console.log
      📊 Validation result: true

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:125:13)

    console.log
      🎯 LeadForm.progressToStep called! {
        targetStep: 2,
        currentStep: 1,
        formDataSize: 4,
        formDataEntries: {
          loanType: 'new_purchase',
          name: 'Test Borrower',
          email: 'test@example.com',
          phone: '91234567'
        },
        loanType: 'new_purchase'
      }

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:103:13)

    console.log
      🔎 About to validate step requirements...

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:121:13)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: {
        loanType: 'new_purchase',
        name: 'Test Borrower',
        email: 'test@example.com',
        phone: '91234567'
      }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: {
        loanType: 'new_purchase',
        name: 'Test Borrower',
        email: 'test@example.com',
        phone: '91234567'
      }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔍 LeadForm validation debug: {
        step: 1,
        requirements: {
          requiredFields: [ 'name', 'email', 'phone' ],
          requiresEmail: true,
          requiresPhone: false
        },
        formData: {
          loanType: 'new_purchase',
          name: 'Test Borrower',
          email: 'test@example.com',
          phone: '91234567'
        },
        formDataSize: 4,
        hasRequiredFields: [
          {
            field: 'name',
            hasField: true,
            value: 'Test Borrower',
            valueType: 'string'
          },
          {
            field: 'email',
            hasField: true,
            value: 'test@example.com',
            valueType: 'string'
          },
          {
            field: 'phone',
            hasField: true,
            value: '91234567',
            valueType: 'string'
          }
        ]
      }

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:162:13)

    console.log
      ✅ LeadForm validation passed!

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:211:13)

    console.log
      📊 Validation result: true

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:125:13)

    console.log
      🎯 LeadForm.progressToStep called! {
        targetStep: 1,
        currentStep: 0,
        formDataSize: 1,
        formDataEntries: { loanType: 'new_purchase' },
        loanType: 'new_purchase'
      }

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:103:13)

    console.log
      🔎 About to validate step requirements...

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:121:13)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔍 LeadForm validation debug: {
        step: 0,
        requirements: {
          requiredFields: [ 'loanType' ],
          requiresEmail: false,
          requiresPhone: false
        },
        formData: { loanType: 'new_purchase' },
        formDataSize: 1,
        hasRequiredFields: [
          {
            field: 'loanType',
            hasField: true,
            value: 'new_purchase',
            valueType: 'string'
          }
        ]
      }

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:162:13)

    console.log
      ✅ LeadForm validation passed!

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:211:13)

    console.log
      📊 Validation result: true

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:125:13)

    console.log
      🎯 LeadForm.progressToStep called! {
        targetStep: 2,
        currentStep: 1,
        formDataSize: 4,
        formDataEntries: {
          loanType: 'new_purchase',
          name: 'Test Borrower',
          email: 'test@example.com',
          phone: '91234567'
        },
        loanType: 'new_purchase'
      }

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:103:13)

    console.log
      🔎 About to validate step requirements...

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:121:13)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: {
        loanType: 'new_purchase',
        name: 'Test Borrower',
        email: 'test@example.com',
        phone: '91234567'
      }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: {
        loanType: 'new_purchase',
        name: 'Test Borrower',
        email: 'test@example.com',
        phone: '91234567'
      }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔍 LeadForm validation debug: {
        step: 1,
        requirements: {
          requiredFields: [ 'name', 'email', 'phone' ],
          requiresEmail: true,
          requiresPhone: false
        },
        formData: {
          loanType: 'new_purchase',
          name: 'Test Borrower',
          email: 'test@example.com',
          phone: '91234567'
        },
        formDataSize: 4,
        hasRequiredFields: [
          {
            field: 'name',
            hasField: true,
            value: 'Test Borrower',
            valueType: 'string'
          },
          {
            field: 'email',
            hasField: true,
            value: 'test@example.com',
            valueType: 'string'
          },
          {
            field: 'phone',
            hasField: true,
            value: '91234567',
            valueType: 'string'
          }
        ]
      }

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:162:13)

    console.log
      ✅ LeadForm validation passed!

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:211:13)

    console.log
      📊 Validation result: true

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:125:13)

    console.log
      🎯 LeadForm.progressToStep called! {
        targetStep: 1,
        currentStep: 0,
        formDataSize: 1,
        formDataEntries: { loanType: 'new_purchase' },
        loanType: 'new_purchase'
      }

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:103:13)

    console.log
      🔎 About to validate step requirements...

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:121:13)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔍 LeadForm validation debug: {
        step: 0,
        requirements: {
          requiredFields: [ 'loanType' ],
          requiresEmail: false,
          requiresPhone: false
        },
        formData: { loanType: 'new_purchase' },
        formDataSize: 1,
        hasRequiredFields: [
          {
            field: 'loanType',
            hasField: true,
            value: 'new_purchase',
            valueType: 'string'
          }
        ]
      }

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:162:13)

    console.log
      ✅ LeadForm validation passed!

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:211:13)

    console.log
      📊 Validation result: true

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:125:13)

    console.log
      🎯 LeadForm.progressToStep called! {
        targetStep: 2,
        currentStep: 1,
        formDataSize: 4,
        formDataEntries: {
          loanType: 'new_purchase',
          name: 'Test Borrower',
          email: 'test@example.com',
          phone: '91234567'
        },
        loanType: 'new_purchase'
      }

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:103:13)

    console.log
      🔎 About to validate step requirements...

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:121:13)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: {
        loanType: 'new_purchase',
        name: 'Test Borrower',
        email: 'test@example.com',
        phone: '91234567'
      }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: {
        loanType: 'new_purchase',
        name: 'Test Borrower',
        email: 'test@example.com',
        phone: '91234567'
      }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔍 LeadForm validation debug: {
        step: 1,
        requirements: {
          requiredFields: [ 'name', 'email', 'phone' ],
          requiresEmail: true,
          requiresPhone: false
        },
        formData: {
          loanType: 'new_purchase',
          name: 'Test Borrower',
          email: 'test@example.com',
          phone: '91234567'
        },
        formDataSize: 4,
        hasRequiredFields: [
          {
            field: 'name',
            hasField: true,
            value: 'Test Borrower',
            valueType: 'string'
          },
          {
            field: 'email',
            hasField: true,
            value: 'test@example.com',
            valueType: 'string'
          },
          {
            field: 'phone',
            hasField: true,
            value: '91234567',
            valueType: 'string'
          }
        ]
      }

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:162:13)

    console.log
      ✅ LeadForm validation passed!

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:211:13)

    console.log
      📊 Validation result: true

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:125:13)

FAIL components/forms/__tests__/Step3NewPurchase.test.tsx (5.527 s)
  ● Step3NewPurchase › MAS Readiness Card › initially shows incomplete state when fields are missing

    TestingLibraryElementError: Unable to find an element with the text: Complete all required fields to check eligibility. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body[39m
      [33mstyle[39m=[32m""[39m
    [36m>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"space-y-6"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"space-y-4"[39m
          [36m>[39m
            [36m<h3[39m
              [33mclass[39m=[32m"text-sm font-semibold text-black"[39m
            [36m>[39m
              [0mIncome Details[0m
            [36m</h3>[39m
            [36m<div[39m
              [33mclass[39m=[32m"space-y-4 p-4 border border-[#E5E5E5]"[39m
            [36m>[39m
              [36m<p[39m
                [33mclass[39m=[32m"text-xs uppercase tracking-wider text-[#666666] font-semibold"[39m
              [36m>[39m
                [0mApplicant 1 (Primary)[0m
              [36m</p>[39m
              [36m<div>[39m
                [36m<label[39m
                  [33mclass[39m=[32m"text-xs uppercase tracking-wider text-[#666666] font-semibold mb-2 block"[39m
                  [33mfor[39m=[32m"monthly-income-primary"[39m
                [36m>[39m
                  [0mMonthly income *[0m
                [36m</label>[39m
                [36m<input[39m
                  [33mclass[39m=[32m"flex h-12 w-full border border-fog bg-white px-4 text-base text-ink placeholder:text-silver focus:border-gold focus:outline-none disabled:cursor-not-allowed disabled:opacity-50 transition-all duration-200 font-mono"[39m
                  [33mid[39m=[32m"monthly-income-primary"[39m
                  [33mname[39m=[32m"actualIncomes.0"[39m
                  [33mplaceholder[39m=[32m"8000"[39m
                  [33mtype[39m=[32m"number"[39m
                  [33mvalue[39m=[32m""[39m
                [36m/>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<label[39m
                  [33mclass[39m=[32m"text-xs uppercase tracking-wider text-[#666666] font-semibold mb-2 block"[39m
                  [33mfor[39m=[32m"variable-income"[39m
                [36m>[39m
                  [0mVariable / bonus income (optional)[0m
                [36m</label>[39m
                [36m<input[39m
                  [33mclass[39m=[32m"flex h-12 w-full border border-fog bg-white px-4 text-base text-ink placeholder:text-silver focus:border-gold focus:outline-none disabled:cursor-not-allowed disabled:opacity-50 transition-all duration-200 font-mono"[39m
                  [33mid[39m=[32m"variable-income"[39m
                  [33mname[39m=[32m"actualVariableIncomes.0"[39m
                  [33mplaceholder[39m=[32m"1500"[39m
                  [33mtype[39m=[32m"number"[39m
                  [33mvalue[39m=[32m"0"[39m
                [36m/>[39m
                [36m<p[39m
                  [33mclass[39m=[32m"text-xs text-[#666666] mt-1"[39m
                [36m>[39m
                  [0mAveraged into MAS readiness for commission or bonus structures[0m
                [36m</p>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<label[39m
                  [33mclass[39m=[32m"text-xs uppercase tracking-wider text-[#666666] font-semibold mb-2 block"[39m
                  [33mfor[39m=[32m"age-primary"[39m
                [36m>[39m
                  [0mYour Age *[0m
                [36m</label>[39m
                [36m<input[39m
                  [33mclass[39m=[32m"flex h-12 w-full border border-fog bg-white px-4 text-base text-ink placeholder:text-silver focus:border-gold focus:outline-none disabled:cursor-not-allowed disabled:opacity-50 transition-all duration-200"[39m
                  [33mid[39m=[32m"age-primary"[39m
                  [33mname[39m=[32m"actualAges.0"[39m
                  [33mplaceholder[39m=[32m"35"[39m
                  [33mtype[39m=[32m"number"[39m
                  [33mvalue[39m=[32m""[39m
                [36m/>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<label[39m
                  [33mclass[39m=[32m"text-xs uppercase tracking-wider text-[#666666] font-semibold mb-2 block"[39m
                  [33mid[39m=[32m"employment-type-label"[39m
                [36m>[39m
                  [0mEmployment Type *[0m
                [36m</label>[39m
                [36m<button[39m
                  [33maria-autocomplete[39m=[32m"none"[39m
                  [33maria-controls[39m=[32m"radix-:r36:"[39m
                  [33maria-expanded[39m=[32m"false"[39m
                  [33maria-label[39m=[32m"Employment Type"[39m
                  [33maria-labelledby[39m=[32m"employment-type-label"[39m
                  [33mclass[39m=[32m"flex h-12 w-full items-center justify-between whitespace-nowrap border border-fog bg-white px-4 text-base text-ink data-[placeholder]:text-silver focus:border-gold focus:outline-none disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1 transition-all duration-200"[39m
                  [33mdata-state[39m=[32m"closed"[39m
                  [33mdir[39m=[32m"ltr"[39m
                  [33mid[39m=[32m"employment-type-select"[39m
                  [33mrole[39m=[32m"combobox"[39m
                  [33mtype[39m=[32m"button"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mstyle[39m=[32m"pointer-events: none;"[39m
                  [36m>[39m
                    [0mEmployed (salary)[0m
                  [36m</span>[39m
                  [36m<svg[39m
                    [33maria-hidden[39m=[32m"true"[39m
                    [33mclass[39m=[32m"h-4 w-4 text-silver"[39m
                    [33mfill[39m=[32m"none"[39m
                    [33mheight[39m=[32m"15"[39m
                    [33mviewBox[39m=[32m"0 0 15 15"[39m
                    [33mwidth[39m=[32m"15"[39m
                    [33mxmlns[39m=[32m"http://www.w3.org/2000/svg"[39m
                  [36m>[39m
                    [36m<path[39m
                      [33mclip-rule[39m=[32m"evenodd"[39m
                      [33md[39m=[32m"M3.13523 6.15803C3.3241 5.95657 3.64052 5.94637 3.84197 6.13523L7.5 9.56464L11.158 6.13523C11.3595 5.94637 11.6759 5.95657 11.8648 6.15803C12.0536 6.35949 12.0434 6.67591 11.842 6.86477L7.84197 10.6148C7.64964 10.7951 7.35036 10.7951 7.15803 10.6148L3.15803 6.86477C2.95657 6.67591 2.94637 6.35949 3.13523 6.15803Z"[39m
                      [33mfill[39m=[32m"currentColor"[39m
                      [33mfill-rule[39m=[32m"evenodd"[39m
                    [36m/>[39m
                  [36m</svg>[39m
                [36m</button>[39m
                [36m<p[39m
                  [33mclass[39m=[32m"text-xs text-[#666666] mt-1"[39m
                [36m>[39m
                  [0mIncome recognition: [0m
                  [0m100[0m
                  [0m%[0m
                [36m</p>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"space-y-4"[39m
          [36m>[39m
            [36m<h3[39m
              [33mclass[39m=[32m"text-sm font-semibold text-black"[39m
            [36m>[39m
              [0mFinancial Commitments[0m
            [36m</h3>[39m
            [36m<div[39m
              [33mclass[39m=[32m"space-y-4 p-4 border border-[#E5E5E5]"[39m
            [36m>[39m
          ...

    [0m [90m 250 |[39m
     [90m 251 |[39m       expect(screen[33m.[39mgetByText([32m'MAS Readiness Check'[39m))[33m.[39mtoBeInTheDocument()
    [31m[1m>[22m[39m[90m 252 |[39m       expect(screen[33m.[39mgetByText([32m'Complete all required fields to check eligibility'[39m))[33m.[39mtoBeInTheDocument()
     [90m     |[39m                     [31m[1m^[22m[39m
     [90m 253 |[39m     })
     [90m 254 |[39m
     [90m 255 |[39m     it([32m'shows MAS readiness metrics when data is complete'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (components/forms/__tests__/Step3NewPurchase.test.tsx:252:21)

PASS components/forms/__tests__/Step3Refinance.test.tsx
  ● Console

    console.error
      Warning: A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components
          at input
          at className (C:\Users\HomePC\Desktop\Code\NextNest\components\ui\input.tsx:6:6)
          at div
          at indexB (C:\Users\HomePC\Desktop\Code\NextNest\node_modules\react-hook-form\src\utils\swap.ts:2:23)
          at div
          at div
          at div
          at onFieldChange (C:\Users\HomePC\Desktop\Code\NextNest\components\forms\sections\Step3Refinance.tsx:25:3)
          at encType (C:\Users\HomePC\Desktop\Code\NextNest\node_modules\react-hook-form\src\form.tsx:142:16)
          at children (C:\Users\HomePC\Desktop\Code\NextNest\components\forms\__tests__\Step3Refinance.test.tsx:61:87)

    [0m [90m 522 |[39m
     [90m 523 |[39m       [36mconst[39m jointIncomeInput [33m=[39m screen[33m.[39mgetByLabelText([32m'Monthly Income'[39m)
    [31m[1m>[22m[39m[90m 524 |[39m       fireEvent[33m.[39mchange(jointIncomeInput[33m,[39m { target[33m:[39m { value[33m:[39m [32m'7000'[39m } })
     [90m     |[39m                 [31m[1m^[22m[39m
     [90m 525 |[39m
     [90m 526 |[39m       expect(mockOnFieldChange)[33m.[39mtoHaveBeenCalledWith([32m'actualIncomes.1'[39m[33m,[39m [35m7000[39m)
     [90m 527 |[39m     })[0m

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at updateWrapper (node_modules/react-dom/cjs/react-dom.development.js:1813:7)
      at updateProperties (node_modules/react-dom/cjs/react-dom.development.js:10151:7)
      at commitUpdate (node_modules/react-dom/cjs/react-dom.development.js:11047:3)
      at commitMutationEffectsOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24428:19)
      at recursivelyTraverseMutationEffects (node_modules/react-dom/cjs/react-dom.development.js:24312:7)
      at commitMutationEffectsOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24332:9)
      at recursivelyTraverseMutationEffects (node_modules/react-dom/cjs/react-dom.development.js:24312:7)
      at commitMutationEffectsOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24385:9)
      at recursivelyTraverseMutationEffects (node_modules/react-dom/cjs/react-dom.development.js:24312:7)
      at commitMutationEffectsOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24332:9)
      at recursivelyTraverseMutationEffects (node_modules/react-dom/cjs/react-dom.development.js:24312:7)
      at commitMutationEffectsOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24385:9)
      at recursivelyTraverseMutationEffects (node_modules/react-dom/cjs/react-dom.development.js:24312:7)
      at commitMutationEffectsOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24385:9)
      at recursivelyTraverseMutationEffects (node_modules/react-dom/cjs/react-dom.development.js:24312:7)
      at commitMutationEffectsOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24385:9)
      at recursivelyTraverseMutationEffects (node_modules/react-dom/cjs/react-dom.development.js:24312:7)
      at commitMutationEffectsOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24332:9)
      at recursivelyTraverseMutationEffects (node_modules/react-dom/cjs/react-dom.development.js:24312:7)
      at commitMutationEffectsOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24615:9)
      at recursivelyTraverseMutationEffects (node_modules/react-dom/cjs/react-dom.development.js:24312:7)
      at commitMutationEffectsOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24332:9)
      at recursivelyTraverseMutationEffects (node_modules/react-dom/cjs/react-dom.development.js:24312:7)
      at commitMutationEffectsOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24332:9)
      at recursivelyTraverseMutationEffects (node_modules/react-dom/cjs/react-dom.development.js:24312:7)
      at commitMutationEffectsOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24471:9)
      at commitMutationEffects (node_modules/react-dom/cjs/react-dom.development.js:24282:3)
      at commitRootImpl (node_modules/react-dom/cjs/react-dom.development.js:26849:5)
      at commitRoot (node_modules/react-dom/cjs/react-dom.development.js:26721:5)
      at performSyncWorkOnRoot (node_modules/react-dom/cjs/react-dom.development.js:26156:3)
      at flushSyncCallbacks (node_modules/react-dom/cjs/react-dom.development.js:12042:22)
      at flushSync (node_modules/react-dom/cjs/react-dom.development.js:26240:7)
      at finishEventHandler (node_modules/react-dom/cjs/react-dom.development.js:3976:5)
      at batchedUpdates (node_modules/react-dom/cjs/react-dom.development.js:3994:5)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom.development.js:9287:3)
      at dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay (node_modules/react-dom/cjs/react-dom.development.js:6465:5)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom.development.js:6457:5)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom.development.js:6430:5)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLInputElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
      at HTMLInputElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
      at HTMLInputElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
      at node_modules/@testing-library/dom/dist/events.js:19:20
      at node_modules/@testing-library/react/dist/pure.js:108:16
      at node_modules/@testing-library/react/dist/act-compat.js:48:24
      at act (node_modules/react/cjs/react.development.js:2512:16)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at Object.eventWrapper (node_modules/@testing-library/react/dist/pure.js:107:28)
      at fireEvent (node_modules/@testing-library/dom/dist/events.js:12:35)
      at Function.fireEvent.<computed> [as change] (node_modules/@testing-library/dom/dist/events.js:110:36)
      at Function.fireEvent.<computed> [as change] (node_modules/@testing-library/react/dist/fire-event.js:15:52)
      at Object.change (components/forms/__tests__/Step3Refinance.test.tsx:524:17)

PASS components/forms/__tests__/test_progressive-form-implementation.test.tsx
  ● Console

    console.log
      🎯 LeadForm.progressToStep called! {
        targetStep: 1,
        currentStep: 0,
        formDataSize: 1,
        formDataEntries: { loanType: 'new_purchase' },
        loanType: 'new_purchase'
      }

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:103:13)

    console.log
      🔎 About to validate step requirements...

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:121:13)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔍 LeadForm validation debug: {
        step: 0,
        requirements: {
          requiredFields: [ 'loanType' ],
          requiresEmail: false,
          requiresPhone: false
        },
        formData: { loanType: 'new_purchase' },
        formDataSize: 1,
        hasRequiredFields: [
          {
            field: 'loanType',
            hasField: true,
            value: 'new_purchase',
            valueType: 'string'
          }
        ]
      }

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:162:13)

    console.log
      ✅ LeadForm validation passed!

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:211:13)

    console.log
      📊 Validation result: true

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:125:13)

    console.log
      🎯 LeadForm.progressToStep called! {
        targetStep: 2,
        currentStep: 1,
        formDataSize: 4,
        formDataEntries: {
          loanType: 'new_purchase',
          name: 'Jamie Lee',
          email: 'jamie@example.com',
          phone: '98765432'
        },
        loanType: 'new_purchase'
      }

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:103:13)

    console.log
      🔎 About to validate step requirements...

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:121:13)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: {
        loanType: 'new_purchase',
        name: 'Jamie Lee',
        email: 'jamie@example.com',
        phone: '98765432'
      }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: {
        loanType: 'new_purchase',
        name: 'Jamie Lee',
        email: 'jamie@example.com',
        phone: '98765432'
      }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔍 LeadForm validation debug: {
        step: 1,
        requirements: {
          requiredFields: [ 'name', 'email', 'phone' ],
          requiresEmail: true,
          requiresPhone: false
        },
        formData: {
          loanType: 'new_purchase',
          name: 'Jamie Lee',
          email: 'jamie@example.com',
          phone: '98765432'
        },
        formDataSize: 4,
        hasRequiredFields: [
          {
            field: 'name',
            hasField: true,
            value: 'Jamie Lee',
            valueType: 'string'
          },
          {
            field: 'email',
            hasField: true,
            value: 'jamie@example.com',
            valueType: 'string'
          },
          {
            field: 'phone',
            hasField: true,
            value: '98765432',
            valueType: 'string'
          }
        ]
      }

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:162:13)

    console.log
      ✅ LeadForm validation passed!

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:211:13)

    console.log
      📊 Validation result: true

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:125:13)

PASS components/forms/__tests__/ProgressiveFormManualProgression.test.tsx
  ● Console

    console.log
      🎯 LeadForm.progressToStep called! {
        targetStep: 1,
        currentStep: 0,
        formDataSize: 1,
        formDataEntries: { loanType: 'new_purchase' },
        loanType: 'new_purchase'
      }

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:103:13)

    console.log
      🔎 About to validate step requirements...

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:121:13)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: { loanType: 'new_purchase' }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔍 LeadForm validation debug: {
        step: 0,
        requirements: {
          requiredFields: [ 'loanType' ],
          requiresEmail: false,
          requiresPhone: false
        },
        formData: { loanType: 'new_purchase' },
        formDataSize: 1,
        hasRequiredFields: [
          {
            field: 'loanType',
            hasField: true,
            value: 'new_purchase',
            valueType: 'string'
          }
        ]
      }

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:162:13)

    console.log
      ✅ LeadForm validation passed!

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:211:13)

    console.log
      📊 Validation result: true

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:125:13)

    console.log
      🎯 LeadForm.progressToStep called! {
        targetStep: 2,
        currentStep: 1,
        formDataSize: 4,
        formDataEntries: {
          loanType: 'new_purchase',
          name: 'Alex Tan',
          email: 'alex@example.com',
          phone: '91234567'
        },
        loanType: 'new_purchase'
      }

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:103:13)

    console.log
      🔎 About to validate step requirements...

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:121:13)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: {
        loanType: 'new_purchase',
        name: 'Alex Tan',
        email: 'alex@example.com',
        phone: '91234567'
      }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔧 getStep2Fields for new_purchase - checking form data: {
        loanType: 'new_purchase',
        name: 'Alex Tan',
        email: 'alex@example.com',
        phone: '91234567'
      }

      at LeadForm.log [as getStep2Fields] (lib/domains/forms/entities/LeadForm.ts:265:17)

    console.log
      🔍 LeadForm validation debug: {
        step: 1,
        requirements: {
          requiredFields: [ 'name', 'email', 'phone' ],
          requiresEmail: true,
          requiresPhone: false
        },
        formData: {
          loanType: 'new_purchase',
          name: 'Alex Tan',
          email: 'alex@example.com',
          phone: '91234567'
        },
        formDataSize: 4,
        hasRequiredFields: [
          {
            field: 'name',
            hasField: true,
            value: 'Alex Tan',
            valueType: 'string'
          },
          {
            field: 'email',
            hasField: true,
            value: 'alex@example.com',
            valueType: 'string'
          },
          {
            field: 'phone',
            hasField: true,
            value: '91234567',
            valueType: 'string'
          }
        ]
      }

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:162:13)

    console.log
      ✅ LeadForm validation passed!

      at LeadForm.log [as validateStepRequirements] (lib/domains/forms/entities/LeadForm.ts:211:13)

    console.log
      📊 Validation result: true

      at LeadForm.log [as progressToStep] (lib/domains/forms/entities/LeadForm.ts:125:13)

PASS lib/validation/__tests__/mortgage-schemas.test.ts
PASS tests/calculations/compliance-snapshot.test.ts
PASS tests/calculations/dr-elena-constants.test.ts
PASS tests/calculations/refinance-outlook.test.ts
PASS lib/forms/__tests__/form-config.test.ts
PASS tests/jest-smoke.test.ts
PASS tests/dr-elena-v2-regulation.test.ts
PASS components/forms/__tests__/Step3NewPurchaseUnit.test.tsx

Test Suites: 2 failed, 13 passed, 15 total
Tests:       2 failed, 224 passed, 226 total
Snapshots:   0 total
Time:        47.463 s
Ran all test suites.
